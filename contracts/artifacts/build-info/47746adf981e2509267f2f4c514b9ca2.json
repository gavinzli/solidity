{
	"id": "47746adf981e2509267f2f4c514b9ca2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.17",
	"solcLongVersion": "0.8.17+commit.8df45f5f",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/MyContract.sol": {
				"content": "// SPDX-License-Identifier: Gavin\npragma solidity ^0.8.0;\n\ncontract MyContract{\n    // State Variables\n    // uint public myUint = 1;\n    // uint256 public myUint256 = 1;\n    // uint8 public myUint8 = 1;\n    // int256 public myInt256 = 1;\n\n    // string public myString = \"Hello, world\";\n    // bytes32 public myBytes32 = \"Hello, world!\";\n\n    // address public myAddress = 0x5B38Da6a701c568545dCfcB03FcB875f56beddC4;\n\n    // struct MyStruct{\n    //     uint256 myUint256;\n    //     string myString;\n    // }\n\n    // MyStruct public myStruct = MyStruct(1, \"Hello, world!\");\n\n    // // Local variables\n    // function getValue() public pure returns(uint){\n    //     uint value = 1 + 1;\n    //     return value;\n    // }\n\n    // Arrays\n    // uint[] public uintArray = [1,2,3];\n    // string[] public stringArray = [\"apple\",\"banana\",\"carrot\"];\n    // string[] public values;\n\n    // function addValue(string memory _value) public {\n    //     values.push(_value);\n    // }\n\n    // function valueCount() public view returns(uint) {\n    //     return values.length;\n    // }\n\n    // uint256[][] public array2D = [[1,2,3], [4,5,6]];\n\n    // Mappings\n    // mapping(uint => string) public names;\n    // mapping(uint => Book) public books;\n    // mapping(address => mapping(uint => Book)) public myBooks;\n\n    // struct Book {\n    //     string title;\n    //     string author;\n    // }\n\n    // constructor() {\n    //     names[1] = \"Adam\";\n    //     names[2] = \"Bruce\";\n    //     names[3] = \"Carl\";\n    // }\n\n    // function addBook(\n    //     uint _id, \n    //     string memory _title, \n    //     string memory _author) public {\n    //         books[_id] = Book(_title,_author);\n    // }\n\n    // function addMyBook(\n    //     uint _id, \n    //     string memory _title, \n    //     string memory _author) public {\n    //         myBooks[msg.sender][_id] = Book(_title,_author);\n    // }\n\n    //LOOP\n    // uint[] public numbers = [1,2,3,4,5,6,7,8,9,10];\n\n    // address public owner;\n\n    // constructor(){\n    //     owner = msg.sender;\n    // }\n\n    // function countEvenNumbers() public view returns(uint){\n    //     uint count = 0;\n    //     for(uint i = 0; i < numbers.length; i++){\n    //         if(isEvenNumber(numbers[i])){\n    //             count++;\n    //         }\n    //     }\n    //     return count;\n    // }\n\n    // function isEvenNumber(uint _number) public view returns(bool) {\n    //     if(_number %2 == 0){\n    //         return true;\n    //     }else{\n    //         return false;\n    //     }\n    // }\n\n    // function isOwner() public view returns (bool){\n    //     return(msg.sender == owner);\n    // }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/MyContract.sol": {
				"MyContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/MyContract.sol\":59:2636  contract MyContract{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/MyContract.sol\":59:2636  contract MyContract{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220cd8ab6881def4d4c63ea64e25936caef8e3325fb4cd70e6b8009ddeaff0533cc64736f6c63430008110033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea2646970667358221220cd8ab6881def4d4c63ea64e25936caef8e3325fb4cd70e6b8009ddeaff0533cc64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD DUP11 0xB6 DUP9 SAR 0xEF 0x4D 0x4C PUSH4 0xEA64E259 CALLDATASIZE 0xCA 0xEF DUP15 CALLER 0x25 0xFB 0x4C 0xD7 0xE PUSH12 0x8009DDEAFF0533CC64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "59:2577:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea2646970667358221220cd8ab6881def4d4c63ea64e25936caef8e3325fb4cd70e6b8009ddeaff0533cc64736f6c63430008110033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCD DUP11 0xB6 DUP9 SAR 0xEF 0x4D 0x4C PUSH4 0xEA64E259 CALLDATASIZE 0xCA 0xEF DUP15 CALLER 0x25 0xFB 0x4C 0xD7 0xE PUSH12 0x8009DDEAFF0533CC64736F6C PUSH4 0x43000811 STOP CALLER ",
							"sourceMap": "59:2577:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 59,
									"end": 2636,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 59,
									"end": 2636,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cd8ab6881def4d4c63ea64e25936caef8e3325fb4cd70e6b8009ddeaff0533cc64736f6c63430008110033",
									".code": [
										{
											"begin": 59,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 59,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 59,
											"end": 2636,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 59,
											"end": 2636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 59,
											"end": 2636,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 59,
											"end": 2636,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/MyContract.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/MyContract.sol\":\"MyContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/MyContract.sol\":{\"keccak256\":\"0x74cbf5c2a693e8b2a7990c5c53c698828ca5612e8c099baf88166c954ce3b2ca\",\"license\":\"Gavin\",\"urls\":[\"bzz-raw://2a3a2cd67e14d3ade1a08d6b61c7e851ec63b1d70afc094bb71e94b88adc0260\",\"dweb:/ipfs/QmTNF8oP7ijEwwCMeDmb1Ym8s5ieCS2NEShMZrZ5EaVhxP\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/MyContract.sol": {
				"ast": {
					"absolutePath": "contracts/MyContract.sol",
					"exportedSymbols": {
						"MyContract": [
							2
						]
					},
					"id": 3,
					"license": "Gavin",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "34:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyContract",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2,
							"linearizedBaseContracts": [
								2
							],
							"name": "MyContract",
							"nameLocation": "68:10:0",
							"nodeType": "ContractDefinition",
							"nodes": [],
							"scope": 3,
							"src": "59:2577:0",
							"usedErrors": []
						}
					],
					"src": "34:2602:0"
				},
				"id": 0
			}
		}
	}
}